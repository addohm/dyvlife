# Generated by Django 5.1.5 on 2025-08-03 08:55

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('active', models.BooleanField(default=True)),
                ('type', models.CharField(choices=[('service', 'Service'), ('software', 'Software'), ('subscription', 'Subscription')], default='service', max_length=20)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=True)),
                ('currency', models.CharField(default='usd', max_length=3)),
                ('unit_amount', models.PositiveIntegerField(blank=True, help_text='Price in the smallest currency unit (e.g., cents for USD)', null=True)),
                ('billing_scheme', models.CharField(choices=[('per_unit', 'Per unit'), ('tiered', 'Tiered')], default='per_unit', max_length=20)),
                ('recurring', models.JSONField(blank=True, null=True)),
                ('lookup_key', models.CharField(blank=True, max_length=255)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tiers', models.JSONField(blank=True, null=True)),
                ('tiers_mode', models.CharField(blank=True, max_length=20)),
                ('recurring_interval', models.CharField(blank=True, choices=[('day', 'Day'), ('week', 'Week'), ('month', 'Month'), ('year', 'Year')], max_length=10, null=True)),
                ('recurring_interval_count', models.PositiveIntegerField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='a_stripe.product')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('prices', models.ManyToManyField(blank=True, related_name='features', to='a_stripe.price')),
                ('products', models.ManyToManyField(blank=True, related_name='features', to='a_stripe.product')),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('discount_type', models.CharField(choices=[('percentage', 'Percentage'), ('fixed', 'Fixed amount')], default='percentage', max_length=20)),
                ('discount_value', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('currency', models.CharField(blank=True, max_length=3, null=True)),
                ('active', models.BooleanField(default=True)),
                ('max_redemptions', models.PositiveIntegerField(blank=True, null=True)),
                ('redeem_by', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('valid_for_prices', models.ManyToManyField(blank=True, to='a_stripe.price')),
                ('valid_for_products', models.ManyToManyField(blank=True, to='a_stripe.product')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
